/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_qat_InternalJNI */

#ifndef _Included_com_intel_qat_InternalJNI
#define _Included_com_intel_qat_InternalJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    initFieldIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_intel_qat_InternalJNI_initFieldIDs(JNIEnv *,
                                                                   jclass);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    setup
 * Signature: (Lcom/intel/qat/QatZipper;IIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_setup(JNIEnv *, jclass,
                                                            jobject, jint, jint,
                                                            jint, jint, jint,
                                                            jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    maxCompressedSize
 * Signature: (IJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_maxCompressedSize(
    JNIEnv *, jclass, jint, jlong);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    compressByteArray
 * Signature: (Lcom/intel/qat/QatZipper;I[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_compressByteArray(
    JNIEnv *, jclass, jobject, jint, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    decompressByteArray
 * Signature: (Lcom/intel/qat/QatZipper;I[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_decompressByteArray(
    JNIEnv *, jclass, jobject, jint, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    compressByteBuffer
 * Signature: (ILjava/nio/ByteBuffer;[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_compressByteBuffer(
    JNIEnv *, jclass, jint, jobject, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    decompressByteBuffer
 * Signature: (ILjava/nio/ByteBuffer;[BII[BIII)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_decompressByteBuffer(
    JNIEnv *, jclass, jint, jobject, jbyteArray, jint, jint, jbyteArray, jint,
    jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    compressDirectByteBuffer
 * Signature: (ILjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_compressDirectByteBuffer(
    JNIEnv *, jclass, jint, jobject, jint, jint, jobject, jint, jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    decompressDirectByteBuffer
 * Signature: (ILjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL
Java_com_intel_qat_InternalJNI_decompressDirectByteBuffer(JNIEnv *, jclass,
                                                          jint, jobject, jint,
                                                          jint, jobject, jint,
                                                          jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    compressDirectByteBufferSrc
 * Signature: (ILjava/nio/ByteBuffer;II[BIII)I
 */
JNIEXPORT jint JNICALL
Java_com_intel_qat_InternalJNI_compressDirectByteBufferSrc(JNIEnv *, jclass,
                                                           jint, jobject, jint,
                                                           jint, jbyteArray,
                                                           jint, jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    decompressDirectByteBufferSrc
 * Signature: (ILjava/nio/ByteBuffer;II[BIII)I
 */
JNIEXPORT jint JNICALL
Java_com_intel_qat_InternalJNI_decompressDirectByteBufferSrc(
    JNIEnv *, jclass, jint, jobject, jint, jint, jbyteArray, jint, jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    compressDirectByteBufferDst
 * Signature: (ILjava/nio/ByteBuffer;[BIILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL
Java_com_intel_qat_InternalJNI_compressDirectByteBufferDst(JNIEnv *, jclass,
                                                           jint, jobject,
                                                           jbyteArray, jint,
                                                           jint, jobject, jint,
                                                           jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    decompressDirectByteBufferDst
 * Signature: (ILjava/nio/ByteBuffer;[BIILjava/nio/ByteBuffer;III)I
 */
JNIEXPORT jint JNICALL
Java_com_intel_qat_InternalJNI_decompressDirectByteBufferDst(JNIEnv *, jclass,
                                                             jint, jobject,
                                                             jbyteArray, jint,
                                                             jint, jobject,
                                                             jint, jint, jint);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    zstdGetSeqProdFunction
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL
Java_com_intel_qat_InternalJNI_zstdGetSeqProdFunction(JNIEnv *, jclass);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    zstdCreateSeqProdState
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL
Java_com_intel_qat_InternalJNI_zstdCreateSeqProdState(JNIEnv *, jclass);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    zstdFreeSeqProdState
 * Signature: (J)V
 */
JNIEXPORT void JNICALL
Java_com_intel_qat_InternalJNI_zstdFreeSeqProdState(JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_qat_InternalJNI
 * Method:    teardown
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_intel_qat_InternalJNI_teardown(JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
